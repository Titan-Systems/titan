name: reset-test-account
run_mode: SYNC
allowlist:
  - "account parameter"
  - "catalog integration"
  - "database role"
  - "database role grant"
  - "database"
  - "external volume"
  - "future grant"
  - "grant"
  - "iceberg table"
  - "network rule"
  - "resource monitor"
  - "role grant"
  - "role"
  - "scanner package"
  - "schema"
  - "secret"
  - "security integration"
  - "share"
  - "stage"
  - "storage integration"
  - "stream"
  - "table"
  - "task"
  - "user"
  - "view"
  - "warehouse"

account_parameters:
  - name: ALLOW_ID_TOKEN
    value: true
  - name: TIMEZONE
    value: "America/Los_Angeles"

users:
  - name: static_user
    email: info@applytitan.com
    comment: This is a static user
  - name: TITAN_ADMIN
    default_warehouse: CI
    default_role: SYSADMIN
    default_secondary_roles: []
    lifecycle:
      prevent_destroy: true
      ignore_changes:
        - email
        - first_name
        - last_name
        - owner
  - name: TITAN_CI
    type: SERVICE
  - name: STATIC_USER_KEYPAIR
    type: SERVICE
    rsa_public_key: "{{ var.static_user_rsa_public_key }}"
  - name: STATIC_USER_MFA
    type: PERSON
    password: "{{ var.static_user_mfa_password }}"
    lifecycle:
      ignore_changes:
        - password

roles:
  - name: CI
    comment: CI role, do not drop
    lifecycle:
      prevent_destroy: true
  - name: EMPTY
    comment: This role is intentionally left empty
  - name: STATIC_ROLE
    comment: Static role
  - name: ~@#$%^&*()_+
    owner: ACCOUNTADMIN
    comment: This role has some issues
  - name: '"aCaseWithinACase"'
    comment: This role must be quoted
  - name: EVERY_PRIVILEGE
    comment: This role has every privilege
  - name: TITAN_GRANT_ADMIN
    comment: This role has MANAGE GRANTS privileges
  - name: TITAN_SHARE_ADMIN
    comment: This role has CREATE SHARE privilege

databases:
  - name: static_database
  - name: static_database_the_second

database_roles:
  - name: static_database_role
    database: static_database

role_grants:
  - role: CI
    roles:
      - SYSADMIN
  - role: EMPTY
    roles:
      - SYSADMIN
  - role: static_role
    roles:
      - SYSADMIN
  - role: EVERY_PRIVILEGE
    roles:
      - SYSADMIN
  - role: TITAN_GRANT_ADMIN
    roles:
      - SYSADMIN
  - role: TITAN_SHARE_ADMIN
    roles:
      - SYSADMIN

database_role_grants:
  - database_role: static_database.static_database_role
    roles:
      - SYSADMIN

network_rules:
  - name: static_network_rule
    type: HOST_PORT
    value_list: ["example.com:443"]
    mode: EGRESS
    database: static_database
    schema: public
  - name: static_network_rule_ingress_allow_all
    type: IPV4
    value_list: ["0.0.0.0/0"]
    mode: INGRESS
    database: static_database
    schema: public
  - name: static_network_rule_ingress_suspicious_ip
    type: IPV4
    value_list: ["104.223.91.28"]
    mode: INGRESS
    database: static_database
    schema: public


grants:
  # TITAN_GRANT_ADMIN grants
  - GRANT MANAGE GRANTS ON ACCOUNT TO ROLE TITAN_GRANT_ADMIN

  # TITAN_SHARE_ADMIN grants
  - GRANT CREATE SHARE ON ACCOUNT TO ROLE TITAN_SHARE_ADMIN

  # CI grants
  - GRANT USAGE ON WAREHOUSE STATIC_WAREHOUSE TO ROLE CI
  - GRANT USAGE ON DATABASE static_database TO ROLE CI
  - GRANT USAGE ON SCHEMA static_database.static_schema TO ROLE CI
  - GRANT SELECT ON TABLE static_database.public.static_table TO ROLE CI
  - GRANT SELECT ON VIEW static_database.public.static_view TO ROLE CI
  - GRANT READ ON STAGE static_database.public.static_stage TO ROLE CI

  # EVERY_PRIVILEGE grants
  - GRANT APPLY AUTHENTICATION POLICY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT APPLY MASKING POLICY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT APPLY PACKAGES POLICY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT APPLY PASSWORD POLICY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT APPLY RESOURCE GROUP ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT APPLY SESSION POLICY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT ATTACH POLICY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT AUDIT ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT BIND SERVICE ENDPOINT ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE ACCOUNT ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE API INTEGRATION ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE APPLICATION ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE APPLICATION PACKAGE ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  # - GRANT CREATE COMPUTE POOL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE DATA EXCHANGE LISTING ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE DATABASE ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE EXTERNAL VOLUME ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE FAILOVER GROUP ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE INTEGRATION ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE NETWORK POLICY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE REPLICATION GROUP ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE ROLE ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE SHARE ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE USER ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE WAREHOUSE ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT EXECUTE ALERT ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT EXECUTE DATA METRIC FUNCTION ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT EXECUTE MANAGED ALERT ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT EXECUTE MANAGED TASK ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT EXECUTE TASK ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT IMPORT SHARE ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MANAGE ACCOUNT SUPPORT CASES ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MANAGE EVENT SHARING ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MANAGE GRANTS ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MANAGE USER SUPPORT CASES ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MANAGE WAREHOUSES ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MODIFY LOG LEVEL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MODIFY METRIC LEVEL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MODIFY SESSION LOG LEVEL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MODIFY SESSION METRIC LEVEL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MODIFY SESSION TRACE LEVEL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MODIFY TRACE LEVEL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MONITOR ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MONITOR EXECUTION ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MONITOR SECURITY ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT MONITOR USAGE ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT OVERRIDE SHARE RESTRICTIONS ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT PURCHASE DATA EXCHANGE LISTING ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT RESOLVE ALL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  - GRANT APPLYBUDGET ON DATABASE static_database TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE DATABASE ROLE ON DATABASE static_database TO ROLE EVERY_PRIVILEGE
  - GRANT CREATE SCHEMA ON DATABASE static_database TO ROLE EVERY_PRIVILEGE
  - GRANT MODIFY ON DATABASE static_database TO ROLE EVERY_PRIVILEGE
  - GRANT MONITOR ON DATABASE static_database TO ROLE EVERY_PRIVILEGE
  - GRANT USAGE ON DATABASE static_database TO ROLE EVERY_PRIVILEGE

  # - GRANT ALL ON ACCOUNT TO ROLE EVERY_PRIVILEGE
  # - GRANT ALL ON DATABASE static_database TO ROLE EVERY_PRIVILEGE
  # - GRANT ALL ON SCHEMA static_database.public TO ROLE EVERY_PRIVILEGE
  # - GRANT ALL ON TABLE static_database.public.static_table TO ROLE EVERY_PRIVILEGE
  # - GRANT ALL ON VIEW static_database.public.static_view TO ROLE EVERY_PRIVILEGE
  # - GRANT ALL ON STAGE static_database.public.static_stage TO ROLE EVERY_PRIVILEGE
  # - GRANT ALL ON STREAM static_database.public.static_stream TO ROLE EVERY_PRIVILEGE
  # - GRANT ALL ON NETWORK RULE static_database.public.static_network_rule TO ROLE EVERY_PRIVILEGE

future_grants:
  - GRANT USAGE ON FUTURE SCHEMAS IN DATABASE static_database TO ROLE EVERY_PRIVILEGE
  - GRANT SELECT ON FUTURE TABLES IN SCHEMA static_database.public TO ROLE EVERY_PRIVILEGE
  - GRANT USAGE ON FUTURE STAGES IN SCHEMA static_database.public TO ROLE EVERY_PRIVILEGE
  - GRANT USAGE ON FUTURE GIT REPOSITORIES IN SCHEMA static_database.public TO ROLE EVERY_PRIVILEGE

schemas:
  - name: static_schema
    database: static_database

shares:
  - name: static_share

stages:
  - name: static_stage
    type: INTERNAL
    directory:
      enable: true
    database: static_database
    schema: public

streams:
  - name: static_stream
    database: static_database
    schema: public
    on_table: static_database.public.static_table
    copy_grants: false

tables:
  - name: static_table
    columns:
      - name: id
        data_type: NUMBER(38,0)
    change_tracking: true
    database: static_database
    schema: public

tasks:
  - name: static_task_serverless
    database: static_database
    schema: public
    schedule: "1440 MINUTE"
    user_task_managed_initial_warehouse_size: XSMALL
    config: '{"some_key": "some_value"}'
    suspend_task_after_num_failures: 3
    allow_overlapping_execution: false
    state: STARTED
    when: "1=1"
    as_: SELECT 1
  - name: static_task
    database: static_database
    schema: public
    schedule: "1440 MINUTE"
    warehouse: static_warehouse
    config: '{"some_key": "some_value"}'
    suspend_task_after_num_failures: 3
    allow_overlapping_execution: false
    state: STARTED
    when: "1=1"
    as_: SELECT 1

views:
  - name: static_view
    columns:
      - name: id
        data_type: NUMBER(38,0)
    as_: SELECT id FROM STATIC_DATABASE.public.static_table
    change_tracking: true
    requires:
      - name: static_table
        resource_type: table
    database: static_database
    schema: public

warehouses:
  - name: static_warehouse
    warehouse_size: XSMALL
    auto_suspend: 30
    auto_resume: true
    initially_suspended: true
  - name: CI
    warehouse_size: XSMALL
    auto_suspend: 30
    initially_suspended: true


  
security_integrations:
  - name: STATIC_SECURITY_INTEGRATION
    type: api_authentication
    auth_type: OAUTH2
    oauth_client_auth_method: CLIENT_SECRET_POST
    oauth_client_id: 'sn-oauth-134o9erqfedlc'
    oauth_client_secret: 'eb9vaXsrcEvrFdfcvCaoijhilj4fc'
    oauth_token_endpoint: 'https://myinstance.service-now.com/oauth_token.do'
    enabled: true

external_volumes:
  - name: static_external_volume
    allow_writes: true
    storage_locations:
      - name: us-west-2
        storage_provider: S3
        storage_base_url: "{{ var.storage_base_url }}"
        storage_aws_role_arn: "{{ var.storage_role_arn }}"
        storage_aws_external_id: iceberg_table_external_id

secrets:
  - name: static_secret
    secret_type: PASSWORD
    username: someuser
    password: somepass
    database: static_database
    schema: public

# scanner_packages:
#   - name: THREAT_INTELLIGENCE
#     enabled: true
#     schedule: "0 0 * * * UTC"

